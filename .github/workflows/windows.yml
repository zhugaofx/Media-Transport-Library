name: Windows build

on: [push, pull_request]

env:
  # Customize the env if
  BUILD_TYPE: Release
  DPDK_VERSION: 22.07

jobs:
  Build:
    #if: github.repository == 'OpenVisualCloud/Media-Transport-Library'
    runs-on: [Windows, self-hosted]

    steps:
    - name: checkout kahawai repo
      uses: actions/checkout@v3
      with:
        path: kahawai
    
    - name: checkout dpdk repo
      uses: actions/checkout@v3
      with:
        repository: 'DPDK/dpdk'
        ref: v${{  env.DPDK_VERSION  }}
        path: dpdk

    - name: Apply patches
      run: |
        cd dpdk
        git am ../kahawai/patches/dpdk/${{  env.DPDK_VERSION  }}/*.patch
        git am ../kahawai/patches/dpdk/${{  env.DPDK_VERSION  }}/windows/*.patch
      shell: bash
      
    - name: Build dpdk
      run: |
        cd dpdk
        meson build --prefix=C:\\dpdk
        ninja -C build install
        cd c:\dpdk\lib
        rm *.dll.a
        cd pkgconfig
        move libdpdk.pc libdpdk.pc.backup
        pwsh -command "& {gc .\libdpdk.pc.backup | ForEach-Object {$_ -replace('Libs.private: .+','Libs.private:')} | Out-File -Encoding utf8 libdpdk.pc}"
        move libdpdk-libs.pc libdpdk-libs.pc.backup
        pwsh -command "& {gc .\libdpdk-libs.pc.backup | ForEach-Object {$_ -replace('Libs: .+','Libs:-L${libdir} -lrte_latencystats -lrte_gso -lrte_bus_pci -lrte_gro -lrte_cfgfile -lrte_bitratestats -lrte_timer -lrte_hash -lrte_metrics -lrte_cmdline -lrte_pci -lrte_ethdev -lrte_meter -lrte_net -lrte_net_ice -lrte_net_iavf -lrte_common_iavf -lrte_mbuf -lrte_mempool -lrte_stack -lrte_mempool_stack -lrte_mempool_ring -lrte_rcu -lrte_ring -lrte_eal -lrte_telemetry -lrte_kvargs -lrte_dmadev -lrte_dma_ioat')} | Out-File -Encoding utf8 libdpdk-libs.pc}"
      shell: cmd
